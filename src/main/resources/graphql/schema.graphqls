# GraphQL Schema for Product Management System

# Scalar types
scalar BigDecimal

# Category Type
type Category {
    id: ID!
    name: String!
    images: String
    users: [User!]
    products: [Product!]
}

# User Type
type User {
    id: ID!
    fullname: String!
    email: String!
    password: String!
    phone: String
    categories: [Category!]
    products: [Product!]
}

# Product Type
type Product {
    id: ID!
    title: String!
    quantity: Int!
    desc: String
    price: BigDecimal!
    user: User!
    category: Category!
}

# Input Types for Mutations
input CategoryInput {
    name: String!
    images: String
}

input UserInput {
    fullname: String!
    email: String!
    password: String!
    phone: String
}

input ProductInput {
    title: String!
    quantity: Int!
    desc: String
    price: BigDecimal!
    userId: ID!
    categoryId: ID!
}

input UpdateCategoryInput {
    id: ID!
    name: String
    images: String
}

input UpdateUserInput {
    id: ID!
    fullname: String
    email: String
    password: String
    phone: String
}

input UpdateProductInput {
    id: ID!
    title: String
    quantity: Int
    desc: String
    price: BigDecimal
    userId: ID
    categoryId: ID
}

# Query Type
type Query {
    # Category Queries
    getAllCategories: [Category!]!
    getCategoryById(id: ID!): Category
    getCategoryByName(name: String!): Category
    searchCategoriesByName(name: String!): [Category!]!
    
    # User Queries
    getAllUsers: [User!]!
    getUserById(id: ID!): User
    getUserByEmail(email: String!): User
    searchUsersByName(name: String!): [User!]!
    
    # Product Queries
    getAllProducts: [Product!]!
    getProductById(id: ID!): Product
    getAllProductsByPriceAsc: [Product!]!  # Products ordered by price (low to high)
    getProductsByCategory(categoryId: ID!): [Product!]!  # All products of a category
    searchProductsByTitle(title: String!): [Product!]!
    getProductsByPriceRange(minPrice: BigDecimal!, maxPrice: BigDecimal!): [Product!]!
    getProductsByUserId(userId: ID!): [Product!]!
}

# Mutation Type
type Mutation {
    # Category Mutations
    createCategory(input: CategoryInput!): Category!
    updateCategory(input: UpdateCategoryInput!): Category!
    deleteCategory(id: ID!): Boolean!
    
    # User Mutations
    createUser(input: UserInput!): User!
    updateUser(input: UpdateUserInput!): User!
    deleteUser(id: ID!): Boolean!
    addCategoryToUser(userId: ID!, categoryId: ID!): User!
    removeCategoryFromUser(userId: ID!, categoryId: ID!): User!
    
    # Product Mutations
    createProduct(input: ProductInput!): Product!
    updateProduct(input: UpdateProductInput!): Product!
    deleteProduct(id: ID!): Boolean!
}